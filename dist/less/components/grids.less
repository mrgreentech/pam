// Grids
//
// PAM comes with 1ths to 5ths and 24ths based grid and to wield the grids power there are
// some concepts to keep in mind. PAM Grid consist of two types of attribute selectors:
// `pam-Grid` and `pam-Unit`. **All child elements of a grid must be units. Child elements
// contained within an grid element must be a grid unit. All content which is visible
// needs to be contained inside a grid unit.**
//
// To control adaptive grids, use the default breakpoints with their
// correspinding attribute selector `pam-Unit="[breakpointKey]:[size]"`. For more
// details on how to use, have a look at the adaptive grids section.
// <table pam-Table="striped">
//     <thead>
//         <tr>
//             <th>Key</th>
//             <th>Attribute</th>
//             <th>Applies</th>
//             <th>Media Query</th>
//         </tr>
//     </thead>
//     <tbody>
//         <tr>
//             <td>none</td>
//             <td>pam-Unit="[size]"</td>
//             <td>Always</td>
//             <td>None</td>
//         </tr>
//         <tr>
//             <td>small</td>
//             <td>pam-Unit="small:[size]"</td>
//             <td>≥ 480px</td>
//             <td>@media screen and (min-width: 480px)</td>
//         </tr>
//         <tr>
//             <td>medium</td>
//             <td>pam-Unit="medium:[size]"</td>
//             <td>≥ 768px</td>
//             <td>@media screen and (min-width: 768px)</td>
//         </tr>
//         <tr>
//             <td>large</td>
//             <td>pam-Unit="large:[size]"</td>
//             <td>≥ 1024px</td>
//             <td>@media screen and (min-width: 960px)</td>
//         </tr>
//         <tr>
//             <td>xlarge</td>
//             <td>pam-Unit="xlarge:[size]"</td>
//             <td>≥ 1280px</td>
//             <td>@media screen and (min-width: 1200px)</td>
//         </tr>
//     </tbody>
// </table>
//
// Weight: 2
//
// Style guide: grids

// Fractions
//
// PAM grid supports 1th to 5th and 24th-based grid fractions. Use them
// with `pam-Unit="[1-X]-X"`.
//
// Markup:
// <div pam-Flex>
//     <div pam-size="w:full">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">1</div>
//     </div>
// </div>
// <div pam-flex>
//     <div pam-size="w:1-2">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">2</div>
//     </div>
//     <div pam-size="w:1-2">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">2</div>
//     </div>
// </div>
// <div pam-flex>
//     <div pam-size="w:1-3">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">3</div>
//     </div>
//     <div pam-size="w:1-3">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">3</div>
//     </div>
//     <div pam-size="w:1-3">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">3</div>
//     </div>
// </div>
// <div pam-flex>
//     <div pam-size="w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">4</div>
//     </div>
//     <div pam-size="w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">4</div>
//     </div>
//     <div pam-size="w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">4</div>
//     </div>
//     <div pam-size="w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">4</div>
//     </div>
// </div>
// <div pam-flex>
//     <div pam-size="w:1-5">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">5</div>
//     </div>
//     <div pam-size="w:1-5">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">5</div>
//     </div>
//     <div pam-size="w:1-5">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">5</div>
//     </div>
//     <div pam-size="w:1-5">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">5</div>
//     </div>
//     <div pam-size="w:1-5">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">5</div>
//     </div>
// </div>
// <div pam-flex>
//     <div pam-size="w:4-6">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">6</div>
//     </div>
//     <div pam-size="w:4-6">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">6</div>
//     </div>
//     <div pam-size="w:4-6">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">6</div>
//     </div>
//     <div pam-size="w:4-6">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">6</div>
//     </div>
//     <div pam-size="w:4-6">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">6</div>
//     </div>
//     <div pam-size="w:4-6">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">6</div>
//     </div>
// </div>
//
// Weight: 1
//
// Style guide: grids.fractions

// Nested
//
// Grids can be nested. This examples shows a two level nested grid...
//
// Markup:
// <div pam-flex>
//     <div pam-size="w:1-2">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">
//         <div pam-flex>
//             <div pam-size="w:1-2">
//                 <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1-2</div>
//             </div>
//             <div pam-size="w:1-2">
//                 <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1-2</div>
//             </div>
//         </div>
//     </div>
// </div>
// <div pam-size="w:1-2">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">
//             <div pam-flex>
//                 <div pam-size="w:1-3">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1-3</div>
//                 </div>
//                 <div pam-size="w:1-3">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1-3</div>
//                 </div>
//                 <div pam-size="w:1-3">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1-3</div>
//                 </div>
//             </div>
//         </div>
//     </div>
// </div>
//
// Weight: 2
//
// Style guide: grids.nested

// Adaptive
//
// `pam-Unit="1-1 small:1-2 large:1-4"` Creates a adaptive grid. On small devices it will
// have width: 100%, then it will shrink to width: 50% on small-sized screens and
// shrink to 25% on large-sized screens and above.
//
// Markup:
// <div pam-flex="wrap">
//     <div pam-size="w:full sm:w:1-2 md:w:1-3 lg:w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">1 &#10141; 2 &#10141; 3 &#10141; 4</div>
//     </div>
//     <div pam-size="w:full sm:w:1-2 md:w:1-3 lg:w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">1 &#10141; 2 &#10141; 3 &#10141; 4</div>
//     </div>
//     <div pam-size="w:full sm:w:1-2 md:w:1-3 lg:w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">1 &#10141; 2 &#10141; 3 &#10141; 4</div>
//     </div>
//     <div pam-size="w:full sm:w:1-2 md:w:1-3 lg:w:1-4">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">1 &#10141; 2 &#10141; 3 &#10141; 4</div>
//     </div>
// </div>
//
// Weight: 3
//
// Style guide: grids.adaptive

// Nested
//
// As with the regular grid the adaptive grid can be nested. This example shows
// two units `pam-size="w:full md:1-2"` that each contain a adaptive grid.
//
// Markup:
// <div pam-flex="wrap">
//     <div pam-size="w:full md:w:1-2">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">
//             <div pam-flex>
//                 <div pam-size="w:full lg:w:1-2">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1 &#10141; 2</div>
//                 </div>
//                 <div pam-size="w:full lg:w:1-2">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1 &#10141; 2</div>
//                 </div>
//             </div>
//         </div>
//     </div>
//     <div pam-size="w:full md:w:1-2">
//         <div pam-skin="primary on:primary" pam-space="m:px p:4" pam-text="center">
//             <div pam-flex="wrap">
//                 <div pam-size="w:full lg:w:1-2">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1 &#10141; 2</div>
//                 </div>
//                 <div pam-size="w:full lg:w:1-4">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1 &#10141; 4</div>
//                 </div>
//                 <div pam-size="w:full lg:w:1-4">
//                     <div pam-skin="primary:light on:primary:light" pam-space="m:px p:4" pam-text="center">1 &#10141; 4</div>
//                 </div>
//             </div>
//         </div>
//     </div>
// </div>
//
// Style guide: grids.adaptive.nested

// Media items
//
// `pam-Image` elements can easily be used with the grid. This example shows a `pam-Unit="1-1 small:1-2 large:1-4"` grid with `pam-Image` elements.
//
// Markup:
// <div pam-flex="wrap">
//     <div pam-size="w:full sm:w:1-2 lg:w:1-4">
//         <img pam-Image src="kss-assets/img/icon-60@3x.png">
//     </div>
//     <div pam-size="w:full sm:w:1-2 lg:w:1-4">
//         <img pam-Image src="kss-assets/img/icon-60@3x.png">
//     </div>
//     <div pam-size="w:full sm:w:1-2 lg:w:1-4">
//         <img pam-Image src="kss-assets/img/icon-60@3x.png">
//     </div>
//     <div pam-size="w:full sm:w:1-2 lg:w:1-4">
//        <img pam-Image src="kss-assets/img/icon-60@3x.png">
//     </div>
// </div>
//
// Weight: 4
//
// Style guide: grids.media

//  Variables
// ==================================================================

@grid-spacing: @space-8;
@grid-spacing-large: @space-16;
@grid-spacing-small: @space-base;

// ==================================================================
//  Grid
// ==================================================================

[pam-Grid] {
    letter-spacing: -0.31em;
    text-rendering: optimizeSpeed;
    font-family: Arial, sans-serif;
    display: -webkit-box; // fallback to old flexbox spec
    display: flex;
    flex-flow: row wrap;

    .hook-grid;
}

//  Sub-object: Unit
// ==================================================================

[pam-Grid] [pam-Unit] {
    display: inline-block;
    font-family: @font-family;
    letter-spacing: normal;
    position: relative;
    text-rendering: auto;
    vertical-align: top;
    word-spacing: normal;

    .hook-unit;
}

//  Generate grid columns
// ------------------------------------------------------------------

// 1th-based units
.grid-units(1);

// 2th-based units
.grid-units(2);

// 3th-based units
.grid-units(3);

// 4th-based units
.grid-units(4);

// 5th-based units
.grid-units(5);

// 24th-based units
.grid-units(24);

// Small device breakpoint
// ------------------------------------------------------------------

@media screen and (min-width: @screen-sm) {
    // 1th-based units
    .grid-units(1, 1, "small:");

    // 2th-based units
    .grid-units(2, 1, "small:");

    // 3th-based units
    .grid-units(3, 1, "small:");

    // 4th-based units
    .grid-units(4, 1, "small:");

    // 5th-based units
    .grid-units(5, 1, "small:");

    // 24th-based units
    .grid-units(24, 1, "small:");
}

@media screen and (min-width: @screen-sm) and (orientation: landscape) {
    // 1th-based units
    .grid-units(1, 1, "small:landscape:");

    // 2th-based units
    .grid-units(2, 1, "small:landscape:");

    // 3th-based units
    .grid-units(3, 1, "small:landscape:");

    // 4th-based units
    .grid-units(4, 1, "small:landscape:");

    // 5th-based units
    .grid-units(5, 1, "small:landscape:");

    // 24th-based units
    .grid-units(24, 1, "small:landscape:");
}

// Medium device breakpoint
// ------------------------------------------------------------------

@media screen and (min-width: @screen-md) {
    // 1th-based units
    .grid-units(1, 1, "medium:");

    // 2th-based units
    .grid-units(2, 1, "medium:");

    // 3th-based units
    .grid-units(3, 1, "medium:");

    // 4th-based units
    .grid-units(4, 1, "medium:");

    // 5th-based units
    .grid-units(5, 1, "medium:");

    // 24th-based units
    .grid-units(24, 1, "medium:");
}

@media screen and (min-width: @screen-md) and (orientation: landscape) {
    // 1th-based units
    .grid-units(1, 1, "medium:landscape:");

    // 2th-based units
    .grid-units(2, 1, "medium:landscape:");

    // 3th-based units
    .grid-units(3, 1, "medium:landscape:");

    // 4th-based units
    .grid-units(4, 1, "medium:landscape:");

    // 5th-based units
    .grid-units(5, 1, "medium:landscape:");

    // 24th-based units
    .grid-units(24, 1, "medium:landscape:");
}

// Large device breakpoint
// ------------------------------------------------------------------

@media screen and (min-width: @screen-lg) {
    // 1th-based units
    .grid-units(1, 1, "large:");

    // 2th-based units
    .grid-units(2, 1, "large:");

    // 3th-based units
    .grid-units(3, 1, "large:");

    // 4th-based units
    .grid-units(4, 1, "large:");

    // 5th-based units
    .grid-units(5, 1, "large:");

    // 24th-based units
    .grid-units(24, 1, "large:");
}

@media screen and (min-width: @screen-lg) and (orientation: landscape) {
    // 1th-based units
    .grid-units(1, 1, "large:landscape:");

    // 2th-based units
    .grid-units(2, 1, "large:landscape:");

    // 3th-based units
    .grid-units(3, 1, "large:landscape:");

    // 4th-based units
    .grid-units(4, 1, "large:landscape:");

    // 5th-based units
    .grid-units(5, 1, "large:landscape:");

    // 24th-based units
    .grid-units(24, 1, "large:landscape:");
}

// Xlarge device breakpoint
// ------------------------------------------------------------------

@media screen and (min-width: @screen-lg) {
    // 1th-based units
    .grid-units(1, 1, "xlarge:");

    // 2th-based units
    .grid-units(2, 1, "xlarge:");

    // 3th-based units
    .grid-units(3, 1, "xlarge:");

    // 4th-based units
    .grid-units(4, 1, "xlarge:");

    // 5th-based units
    .grid-units(5, 1, "xlarge:");

    // 24th-based units
    .grid-units(24, 1, "xlarge:");
}

@media screen and (min-width: @screen-lg) and (orientation: landscape) {
    // 1th-based units
    .grid-units(1, 1, "xlarge:landscape:");

    // 2th-based units
    .grid-units(2, 1, "xlarge:landscape:");

    // 3th-based units
    .grid-units(3, 1, "xlarge:landscape:");

    // 4th-based units
    .grid-units(4, 1, "xlarge:landscape:");

    // 5th-based units
    .grid-units(5, 1, "xlarge:landscape:");

    // 24th-based units
    .grid-units(24, 1, "xlarge:landscape:");
}

//  Grid spacing
// ==================================================================

// Spacing
//
// Sometimes the grid needs to be adjusted to it´s context. Use the
// `pam-Grid-Control` attribute to adjust different
// aspects of the grid such as alignment, order and direction. To better
// understand how it all works visit
// <a href="https://codepen.io/enxaneta/full/adLPwv" target="_blank">flexbox playground</a>.
//
// Use `pam-Grid-Control="space[-x|-y]:[large|small]"` to control the spacing of the grid.
//
// **Modifier(s):**
//
//  * `space`: Add spacing to both x and y.
//  * `space-x`: Add spacing to x.
//  * `space-y`: Add spacing to y.
//
// **Variable(s):**
//
// * `@grid-spacing`: Default grid spacing size (default: 8px).
// * `@grid-spacing-large`: Large grid spacing (default: 16px).
// * `@grid-spacing-small`: Small grid spacing (default: 4px).
//
// Weight: 6
//
// Style guide: grids.spacing

// X and Y spacing
//
// Markup:
// <div pam-skin="primary on:primary" pam-text="center">
//     <div pam-flex="wrap" pam-space="-m:2">
//         <div pam-size="w:1-3" pam-space="p:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space</div>
//         </div>
//         <div pam-size="w:1-3" pam-space="p:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space</div>
//         </div>
//         <div pam-size="w:1-3" pam-space="p:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space</div>
//         </div>
//         <div pam-size="w:1-3" pam-space="p:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space</div>
//         </div>
//         <div pam-size="w:1-3" pam-space="p:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space</div>
//         </div>
//         <div pam-size="w:1-3" pam-space="p:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space</div>
//         </div>
//     </div>
// </div>
//
// Weight: 0
//
// Style guide: grids.spacing.x-and-y

// Horizontal spacing
//
// Markup:
// <div pam-skin="primary on:primary" pam-text="center">
//     <div pam-flex pam-space="-mx:2">
//         <div pam-size="w:1-4" pam-space="px:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space X</div>
//         </div>
//         <div pam-size="w:1-4" pam-space="px:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space X</div>
//         </div>
//         <div pam-size="w:1-4" pam-space="px:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space X</div>
//         </div>
//         <div pam-size="w:1-4" pam-space="px:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space X</div>
//         </div>
//     </div>
// </div>
//
// Weight: 1
//
// Style guide: grids.spacing.horizontal

// Vertical spacing
//
// Markup:
// <div pam-skin="primary on:primary" pam-text="center">
//     <div pam-flex="column" pam-space="-mb:2">
//         <div pam-size="w:full" pam-space="pb:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space Y</div>
//         </div>
//         <div pam-size="w:full" pam-space="pb:2">
//             <div pam-skin="primary:light on:primary:light" pam-space="p:2">Space Y</div>
//         </div>
//     </div>
// </div>
//
// Weight: 2
//
// Style guide: grids.spacing.vertical

.grid-control-space();
.grid-control-space(":large", @grid-spacing-large);
.grid-control-space(":small", @grid-spacing-small);

// Hooks
// ==================================================================

// Hooks
//
// `.hook-grid`
// `.hook-unit`
//
// Weight: 10
//
// Style guide: grids.hooks

/* stylelint-disable block-no-empty */
.hook-grid() {
}
.hook-unit() {
}
/* stylelint-enable */
