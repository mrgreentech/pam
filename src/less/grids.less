// Grids
//
// PAM comes with a 5ths and 24ths based grid and to wield the grids power there are
// some concepts to keep in mind. PAM Grid consist of two types of attribute selectors:
// `pam-Grid` and `pam-Unit`. All child elements of a grid must be units. Child elements
// contained within an grid element must be a grid unit. All content which is visible
// needs to be contained inside a grid unit.
//
// Weight: 2
//
// Style guide: grids

[pam-Grid] {
    letter-spacing: -0.31em; /* Webkit: collapse white-space between units */
    text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */

    /*
    Sets the font stack to fonts known to work properly with the above letter
    and word spacings. See: https://github.com/yahoo/pure/issues/41/

    The following font stack makes Pure Grids work on all known environments.
    * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.
    */
    font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    flex-flow: row wrap;
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    .hook-grid;
}


// 5th-based
//
// `pam-Unit="[1-5]-5"` Generates fractions for the 5th-based grid.
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
// </div>
// <div pam-Grid>
//     <div pam-Unit="2-5">
//         <div pam-Unit-Test>2</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
// </div>
// <div pam-Grid>
//     <div pam-Unit="3-5">
//         <div pam-Unit-Test>3</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
// </div>
// <div pam-Grid>
//     <div pam-Unit="4-5">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="1-5">
//         <div pam-Unit-Test>1</div>
//     </div>
// </div>
// <div pam-Grid>
//     <div pam-Unit="5-5">
//         <div pam-Unit-Test>5</div>
//     </div>
// </div>
//
// Style guide: grids.5th-based


// 24th-based
//
// `pam-Unit="[1-24]-24"` Generates fractions for the 24th-based grid.
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
// </div>
// <div pam-Grid>
//     <div pam-Unit="8-24">
//         <div pam-Unit-Test>8</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
// </div>
//     <div pam-Grid>
//         <div pam-Unit="12-24">
//     <div pam-Unit-Test>12</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
// </div>
//     <div pam-Grid>
//         <div pam-Unit="16-24">
//     <div pam-Unit-Test>16</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
// </div>
// <div pam-Grid>
//     <div pam-Unit="20-24">
//         <div pam-Unit-Test>20</div>
//     </div>
//     <div pam-Unit="4-24">
//         <div pam-Unit-Test>4</div>
//     </div>
//     </div>
//     <div pam-Grid>
//         <div pam-Unit="24-24">
//         <div pam-Unit-Test>24</div>
//     </div>
// </div>
//
// Style guide: grids.24th-based


// Nested
//
// Grids can be nested. This examples shows a two level nested grid...
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="1-2">
//         <div pam-Unit-Test>
//         <div pam-Grid>
//             <div pam-Unit="1-2">
//                 <div pam-Unit-Test>1-2</div>
//             </div>
//             <div pam-Unit="1-2">
//                 <div pam-Unit-Test>1-2</div>
//             </div>
//         </div>
//     </div>
// </div>
// <div pam-Unit="1-2">
//         <div pam-Unit-Test>
//             <div pam-Grid>
//                 <div pam-Unit="1-3">
//                     <div pam-Unit-Test>1-3</div>
//                 </div>
//                 <div pam-Unit="1-3">
//                     <div pam-Unit-Test>1-3</div>
//                 </div>
//                 <div pam-Unit="1-3">
//                     <div pam-Unit-Test>1-3</div>
//                 </div>
//             </div>
//         </div>
//     </div>
// </div>
//
// Style guide: grids.nested


// Responsive
//
// `pam-Unit="1-1 small:1-2 large:1-4"` Creates a responsive grid. On small devices it will
// have width: 100%, then it will shrink to width: 50% on small-sized screens and
// shrink to 25% on large-sized screens and above.
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; 4</div>
//     </div>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; 4</div>
//     </div>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; 4</div>
//     </div>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; 4</div>
//     </div>
// </div>
//
// Style guide: grids.responsive


// Responsive landscape
//
// `pam-Unit="1-1 small:1-2 small:landscape:1-3"` Creates a responsive grid which has the
// additional landscape state. On a small device and in landscape the unit width will shrink to 33%.
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="1-1 small:1-2 small:landscape:1-3">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; landscape 3</div>
//     </div>
//     <div pam-Unit="1-1 small:1-2 small:landscape:1-3">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; landscape 3</div>
//     </div>
//     <div pam-Unit="1-1 small:1-2 small:landscape:1-3">
//         <div pam-Unit-Test>1 &#10141; 2 &#10141; landscape 3</div>
//     </div>
// </div>
//
// Style guide: grids.responsive-landscape


// Responsive nested
//
// As with the regular grid the responsive grid can be nested. This example shows
// two units `pam-Unit="1-1 medium:1-2"` that each contain a responsive grid.
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="1-1 medium:1-2">
//         <div pam-Unit-Test>
//             <div pam-Grid>
//                 <div pam-Unit="1-1 large:1-2">
//                     <div pam-Unit-Test>1 &#10141; 2</div>
//                 </div>
//                 <div pam-Unit="1-1 large:1-2">
//                     <div pam-Unit-Test>1 &#10141; 2</div>
//                 </div>
//             </div>
//         </div>
//     </div>
//     <div pam-Unit="1-1 medium:1-2">
//         <div pam-Unit-Test>
//             <div pam-Grid>
//                 <div pam-Unit="1-3 large:1-2">
//                     <div pam-Unit-Test>3 &#10141; 2</div>
//                 </div>
//                 <div pam-Unit="1-3 large:1-4">
//                     <div pam-Unit-Test>3 &#10141; 4</div>
//                 </div>
//                 <div pam-Unit="1-3 large:1-4">
//                     <div pam-Unit-Test>3 &#10141; 4</div>
//                 </div>
//             </div>
//         </div>
//     </div>
// </div>
//
// Style guide: grids.responsive-nested


// Responsive with img content
//
// `pam-Image` elements can easily be used with the grid. This example shows a `pam-Unit="1-1 small:1-2 large:1-4"` grid with `pam-Image` elements.
//
// Markup:
// <div pam-Grid>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <img pam-Image src="icon-60@3x.png">
//     </div>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <img pam-Image src="icon-60@3x.png">
//     </div>
//     <div pam-Unit="1-1 small:1-2 large:1-4">
//         <img pam-Image src="icon-60@3x.png">
//     </div>
//         <div pam-Unit="1-1 small:1-2 large:1-4">
//     <img pam-Image src="icon-60@3x.png">
//     </div>
// </div>
//
// Style guide: grids.img


// Media Queries
//
// To control responsive grids, use the default breakpoints with their
// correspinding attribute selector `pam-Unit="[breakpointName]:[size]"`. For more
// details on how to use, have a look at the responsive grids section.
// <table pam-Table="striped">
//     <thead>
//         <tr>
//             <th>Key</th>
//             <th>Attribute</th>
//             <th>Applies</th>
//             <th>Media Query</th>
//         </tr>
//     </thead>
//     <tbody>
//         <tr>
//             <td>none</td>
//             <td>pam-Unit="[size]"</td>
//             <td>Always</td>
//             <td>None</td>
//         </tr>
//         <tr>
//             <td>small</td>
//             <td>pam-Unit="small:[size]"</td>
//             <td>â‰¥ 480px</td>
//             <td>@media screen and (min-width: 480px)</td>
//         </tr>
//         <tr>
//             <td>medium</td>
//             <td>pam-Unit="medium:[size]"</td>
//             <td>â‰¥ 768px</td>
//             <td>@media screen and (min-width: 768px)</td>
//         </tr>
//         <tr>
//             <td>large</td>
//             <td>pam-Unit="large:[size]"</td>
//             <td>â‰¥ 960px</td>
//             <td>@media screen and (min-width: 960px)</td>
//         </tr>
//         <tr>
//             <td>xlarge</td>
//             <td>pam-Unit="xlarge:[size]"</td>
//             <td>â‰¥ 1200px</td>
//             <td>@media screen and (min-width: 1200px)</td>
//         </tr>
//     </tbody>
// </table>
//
// Style guide: grids.media-queries


[pam-Unit] {
    display: inline-block;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
    .hook-unit;
}

/*
Resets the font family back to the OS/browser's default sans-serif font,
this the same font stack that Normalize.css sets for the `body`.
*/
[pam-Grid] [pam-Unit] {
    font-family: @font-family;
}

[pam-Unit~="1-24"] {
    width: 4.1667%;
}

[pam-Unit~="1-12"],
[pam-Unit~="2-24"] {
    width: 8.3333%;
}

[pam-Unit~="1-8"],
[pam-Unit~="3-24"] {
    width: 12.5%;
}

[pam-Unit~="1-6"],
[pam-Unit~="4-24"] {
    width: 16.6667%;
}

[pam-Unit~="1-5"] {
    width: 20%;
}

[pam-Unit~="5-24"] {
    width: 20.8333%;
}

[pam-Unit~="1-4"],
[pam-Unit~="6-24"] {
    width: 25%;
}

[pam-Unit~="7-24"] {
    width: 29.1667%;
}

[pam-Unit~="1-3"],
[pam-Unit~="8-24"] {
    width: 33.3333%;
}

[pam-Unit~="3-8"],
[pam-Unit~="9-24"] {
    width: 37.5%;
}

[pam-Unit~="2-5"] {
    width: 40%;
}

[pam-Unit~="5-12"],
[pam-Unit~="10-24"] {
    width: 41.6667%;
}

[pam-Unit~="11-24"] {
    width: 45.8333%;
}

[pam-Unit~="1-2"],
[pam-Unit~="12-24"] {
    width: 50%;
}

[pam-Unit~="13-24"] {
    width: 54.1667%;
}

[pam-Unit~="7-12"],
[pam-Unit~="14-24"] {
    width: 58.3333%;
}

[pam-Unit~="3-5"] {
    width: 60%;
}

[pam-Unit~="5-8"],
[pam-Unit~="15-24"] {
    width: 62.5%;
}

[pam-Unit~="2-3"],
[pam-Unit~="16-24"] {
    width: 66.6667%;
}

[pam-Unit~="17-24"] {
    width: 70.8333%;
}

[pam-Unit~="3-4"],
[pam-Unit~="18-24"] {
    width: 75%;
}

[pam-Unit~="19-24"] {
    width: 79.1667%;
}

[pam-Unit~="4-5"] {
    width: 80%;
}

[pam-Unit~="5-6"],
[pam-Unit~="20-24"] {
    width: 83.3333%;
}

[pam-Unit~="7-8"],
[pam-Unit~="21-24"] {
    width: 87.5%;
}

[pam-Unit~="11-12"],
[pam-Unit~="22-24"] {
    width: 91.6667%;
}

[pam-Unit~="23-24"] {
    width: 95.8333%;
}

[pam-Unit~="1"],
[pam-Unit~="1-1"],
[pam-Unit~="5-5"],
[pam-Unit~="24-24"] {
    width: 100%;
}


// Hooks
// ========================================================================

/**
 * Hooks:
 * `.hook-grid`
 * `.hook-unit`
 */

/* stylelint-disable block-no-empty */
.hook-grid() {}
.hook-unit() {}
/* stylelint-enable */
