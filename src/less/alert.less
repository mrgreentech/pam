// Alert
//
// Contextual feedback messages with a set of variations to suite messages
// with some type of intention. For the most basic alert use
// the `pam-Alert` attribute with a `<h1>` as title and `<p>` as message element.
//
// Markup:
// <div pam-Alert="{{modifier_class}}">
//     <h1>Title</h1>
//     <p>Alert message</p>
// </div>
//
// primary - This is a primary alert.
// secondary - This is a secondary alert.
// info - This is not important but may need your attention.
// success - Congratulations! You have successfully done something.
// warning - Wow! You better take a look this needs your attention!
// error - Oh no! That did no go so well get another pair of glasses and try again.
//
// Weight: 9
//
// Style guide: alert

// Variables
// ==================================================================

@alert-background: @skin-background;
@alert-border-color: darken(@alert-background, 5%);
@alert-border-left-width: @space-base;
@alert-border-radius: @border-radius-base;
@alert-border-width: 1px;
@alert-border: 0 solid @alert-border-color;
@alert-color: @skin-on-background;
@alert-line-height: @line-height-base;
@alert-margin-vertical: @space-16;
@alert-padding: @space-16;
@alert-text-font-size: @font-size-medium;
@alert-title-font-size: @font-size-larger;

@alert-primary-background: lighten(@skin-primary, 30%);
@alert-primary-border: darken(@alert-primary-background, 5%);
@alert-primary-color: darken(@alert-primary-background, 50%);

@alert-secondary-background: lighten(@skin-secondary, 30%);
@alert-secondary-border: darken(@alert-secondary-background, 5%);
@alert-secondary-color: darken(@alert-secondary-background, 50%);

@alert-info-background: lighten(@skin-info, 30%);
@alert-info-border: darken(@alert-info-background, 5%);
@alert-info-color: darken(@alert-info-background, 50%);

@alert-success-background: lighten(@skin-success, 30%);
@alert-success-border: darken(@alert-success-background, 5%);
@alert-success-color: darken(@alert-success-background, 50%);

@alert-warning-background: lighten(@skin-warn, 30%);
@alert-warning-border: darken(@alert-warning-background, 5%);
@alert-warning-color: darken(@alert-warning-background, 50%);

@alert-error-background: lighten(@skin-error, 30%);
@alert-error-border: darken(@alert-error-background, 5%);
@alert-error-color: darken(@alert-error-background, 50%);

@alert-outlined-background: @skin-primary-bg;

@alert-link-font-weight: @font-weight-medium;

@alert-large-padding: @space-20;

// ==================================================================
//  Alert
// ==================================================================

[pam-Alert] {
    background: @alert-background;
    border-radius: @alert-border-radius;
    border: 1px solid @alert-border-color;
    border-left-width: @alert-border-left-width;
    color: @alert-color;
    display: block;
    font-size: @alert-text-font-size;
    line-height: @alert-line-height;
    padding: @alert-padding;

    > :last-child {
        margin-bottom: 0;
    }

    > :first-child:not(p) {
        color: inherit;
        font-size: @alert-title-font-size;
        margin: 0;
    }

    > p:first-child {
        margin: 0;
    }

    .hook-alert;
}

* + [pam-Alert] {
    margin-top: @alert-margin-vertical;
}

//  Modifier: primary
// ==================================================================

[pam-Alert~="primary"] {
    background-color: @alert-primary-background;
    border-color: @alert-primary-border;
    color: @alert-primary-color;

    .hook-alert-primary;
}

//  Modifier: secondary
// ==================================================================

[pam-Alert~="secondary"] {
    background-color: @alert-secondary-background;
    border-color: @alert-secondary-border;
    color: @alert-secondary-color;

    .hook-alert-secondary;
}

//  Modifier: info
// ==================================================================

[pam-Alert~="info"] {
    background-color: @alert-info-background;
    border-color: @alert-info-border;
    color: @alert-info-color;

    .hook-alert-info;
}

//  Modifier: success
// ==================================================================

[pam-Alert~="success"] {
    background-color: @alert-success-background;
    border-color: @alert-success-border;
    color: @alert-success-color;

    .hook-alert-success;
}

//  Modifier: warning
// ==================================================================

[pam-Alert~="warning"] {
    background-color: @alert-warning-background;
    border-color: @alert-warning-border;
    color: @alert-warning-color;

    .hook-alert-warning;
}

//  Modifier: error
// ==================================================================

[pam-Alert~="error"] {
    background-color: @alert-error-background;
    border-color: @alert-error-border;
    color: @alert-error-color;

    .hook-alert-error;
}

//  Modifier: outlined
// ==================================================================

// Outlined
//
// This variation of alerts has a more emphasized styling and is a alternative way
// to draw attention to information.
//
// Markup:
// <div pam-Alert="outlined">
//     <h1>Title</h1>
//     <p>outlined message</p>
// </div>
//
// Weight: 1
//
// Style guide: alert.outlined

[pam-Alert~="outlined"] {
    background-color: @alert-outlined-background;

    .hook-alert-outlined;
}

//  Modifier: simple
// ==================================================================

// Simple
//
// A simple alert has most of it properties normalized, such as border-radius and border.
// Can be used as a alert in designs for small screen and devices.
//
// Markup:
// <div pam-Alert="simple">
//     <h1>Title</h1>
//     <p>outlined message</p>
// </div>
//
// Weight: 1
//
// Style guide: alert.simple

[pam-Alert~="simple"] {
    border-radius: 0;
    border: none;

    .hook-alert-simple;
}

//  Sub-Object: pam-Alert-Link
// ==================================================================

// Link
//
// `pam-Alert-Link` is a sub-object that adds contextual colors for links.
//
// Markup:
// <div pam-Alert>
//     <p>This alert has a <a pam-Alert-Link href="#">awesome link!</a></p>
// </div>
//
// Weight: 2
//
// Style guide: alert.link

[pam-Alert-Link] {
    color: inherit;
    font-weight: @alert-link-font-weight;
    text-decoration: none;

    &:hover {
        text-decoration: underline;
        cursor: pointer;
    }

    .hook-alert-link;
}

//  Sub-Object: pam-Close
// ==================================================================

// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

// Close
//
// `pam-Alert="closeable"` Adds styling for closeable alert by expanding
// the right padding and make place for the close icon position.
//
// Markup:
// <div pam-Alert="closeable">
//     <p><strong>Eyy!</strong> This alert can be terminated, awesome!</p>
//     <div pam-Close="right">×</div>
// </div>
//
// Weight: 4
//
// Style guide: alert.close

[pam-Alert~="closeable"] {
    padding-right: (@alert-padding * 2 + @space-8);
    position: relative;
}

[pam-Close] {
    color: inherit;
    font-size: @font-size-xlarge;
    opacity: 0.5;
    padding: @space-12 @space-16;
    position: absolute;
    right: 0;
    top: 0;
    transition: color 0.3s ease;

    &:hover {
        opacity: 1;
        cursor: pointer;
    }
}

//  Fully loaded
// ==================================================================

// Fully loaded
//
// Combine alert sub-objects, throw in a color modifier and add a transaprent divider
// to create a **fully loaded** alert!
//
// Markup:
// <div pam-Alert="info closeable">
//     <h1>Title</h1>
//     <div pam-Close>×</div>
//     <p><strong>Oh yeah</strong>, all alert features closeable, header and link.</p>
//     <div pam-Divider="transparent"></div>
//     <p>Well, <a pam-Alert-Link href="#">that´s just crazy!</a></p>
// </div>
//
// Weight: 5
//
// Style guide: alert.fully-loaded

// Hooks
// ========================================================================

// Hooks
//
// `.hook-alert`
// `.hook-alert-error`
// `.hook-alert-info`
// `.hook-alert-link`
// `.hook-alert-outlined`
// `.hook-alert-primary`
// `.hook-alert-secondary`
// `.hook-alert-simple`
// `.hook-alert-success`
// `.hook-alert-warning`
//
// Weight: 10
//
// Style guide: alert.hooks

/* stylelint-disable block-no-empty */
.hook-alert() {
}
.hook-alert-error() {
}
.hook-alert-info() {
}
.hook-alert-link() {
}
.hook-alert-outlined() {
}
.hook-alert-primary() {
}
.hook-alert-secondary() {
}
.hook-alert-simple() {
}
.hook-alert-success() {
}
.hook-alert-warning() {
}
/* stylelint-enable */

// <VARIABLES>
