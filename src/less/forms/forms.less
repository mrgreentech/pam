// Forms
//
// Forms are cosy!
//
// Markup:
// <form pam-Form="stacked">
//     <legend>The Legend begins...</legend>
//     <label for="test-label">Test input</label>
//     <input id="test-label" type="text" placeholder="Input">
//     <select>
//         <option value="geek">Geek</option>
//         <option value="nerd">Nerd</option>
//         <option value="dork">Dork</option>
//     </select>
//     <textarea rows="5" placeholder="Textarea"></textarea>
//     <label pam-Checkbox>
//         <input type="checkbox" value=""> I´m a hipster
//     </label>
//     <label pam-Radio>
//         <input type="radio" id="radio1" name="optionsRadios" value="radios" checked> Programmer
//     </label>
//     <label pam-Radio>
//         <input type="radio" id="radio2" name="optionsRadios" value="radios"> Designer
//     </label>
// </form>
//
// Weight: 5
//
// Style guide: forms

// TODO: form control sizes
// TODO: form grid layouts
// TODO: Update select box

// Variables
// ==========================================================================

@form-background: rgba(255, 255, 255, 0.1);
@form-border: @skin-light;
@form-border-radius: @border-radius-base;
@form-border-width: 1px;
@form-color: @skin-text-primary;
@form-font-size: @font-size-large;
@form-line-height: 18px;
@form-margin: @space-16;
@form-padding: @space-8;
@form-placeholder-color: @skin-text-secondary;

@form-focus-color: darken(@form-border, 30%);
@form-focus-border: darken(@form-border, 30%);

@form-success-border: @skin-success;
@form-success-background: #ebf6ef;
@form-success-color: @skin-success;

@form-danger-border: @skin-danger;
@form-danger-background: #ffeeeb;
@form-danger-color: @skin-danger;

@form-input-group-margin: @space-8;
@form-input-group-addon-space: @space-60;

@form-padding-vertical: 10px;
@form-padding-horizontal: @space-8;


//  Form
// ==========================================================================

// Inputs
//
// Input controllers
//
// Markup:
// <form pam-Form>
//      <input type="text" placeholder="Input" {{modifier_class}}>
// </form>
//
// disabled - makes a input field disabled.
// readonly - attribute puts a input to a read-only state.
// required - attribute marks a input control as required.
//
// Weight: -1
//
// Style guide: forms.input

[pam-Form] input,
[pam-Form] select,
[pam-Form] textarea {
    font-family: inherit;
    background: @form-background;
    border-radius: @form-border-radius;
    border: @form-border-width solid @form-border;
    box-sizing: border-box;
    color: @form-color;
    display: inline-block;
    font-size: @form-font-size;
    line-height: @form-line-height;
    margin: 0 0 0.5rem;
    padding: @form-padding-vertical @form-padding-horizontal;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

    .placeholder-color(@form-placeholder-color);
    .hook-form;
}

[pam-Form] textarea {
    font-family: @font-family;
    height: auto;
}

// Not supported in IE, Safari or iOS Safari.
[pam-Form] input[type="color"] {
    padding: @form-padding-vertical @form-padding-horizontal;
}


[pam-Form] input:focus,
[pam-Form] select:focus,
[pam-Form] textarea:focus {
    outline: 0;
    border: @form-border-width solid @form-focus-border;

    .hook-form-focus;
}

[pam-Form] input[type="file"]:focus,
[pam-Form] input[type="radio"]:focus,
[pam-Form] input[type="checkbox"]:focus {
    // outline: thin dotted @skin-divider;
    // outline: @form-border-width auto @skin-divider;
}

[pam-Form] input[type="color"]:focus {
    border-color: @skin-divider;
}


// Sub-modifier: Input placeholder properties
// ========================================================================

// [pam-Form] input,
// [pam-Form] select,
// [pam-Form] textarea {
//     .placeholder-color;

//     .hook-form-placeholder;
// }


//  Disabled Input
// ==========================================================================

[pam-Form] input[disabled],
[pam-Form] select[disabled],
[pam-Form] textarea[disabled] {
    cursor: not-allowed;
    color: @skin-text-secondary;

    .hook-form-disabled;
}


//  Read-only input
// ==========================================================================

[pam-Form] input[readonly],
[pam-Form] select[readonly],
[pam-Form] textarea[readonly] {
    color: @skin-text-primary;
    border-color: @form-border;

    .hook-form-readonly;
}

[pam-Form] input[readonly]:focus,
[pam-Form] select[readonly]:focus,
[pam-Form] textarea[readonly]:focus {
    color: @skin-text-secondary;
    border-color: @form-border;

    .hook-form-readonly-focus;
}


//  Required input
// ==========================================================================

[pam-Form] input:focus:invalid,
[pam-Form] textarea:focus:invalid,
[pam-Form] select:focus:invalid {
    border-color: @form-danger-color;

    .hook-form-focus-invalid;
}

[pam-Form] input:focus:invalid:focus,
[pam-Form] textarea:focus:invalid:focus,
[pam-Form] select:focus:invalid:focus {
    border-color: @form-danger-color;

    .hook-form-focus-invalid-focus;
}

[pam-Form] input[type="file"]:focus:invalid:focus,
[pam-Form] input[type="radio"]:focus:invalid:focus,
[pam-Form] input[type="checkbox"]:focus:invalid:focus {
    outline-color: @form-danger-color;

    .hook-form-focus-invalid-focus;
}


//  Borderless input
// ==========================================================================

// Borderless input controller
//
// Markup:
// <form pam-Form>
//      <input type="text" placeholder="Input" pam-Input="borderless">
// </form>
//
// Style guide: forms.input.borderless

[pam-Form] input[pam-Input~="borderless"],
[pam-Form] select[pam-Input~="borderless"],
[pam-Form] textarea[pam-Input~="borderless"] {
    border: none;

    .hook-form-input-borderless;
}

[pam-Form] input[pam-Input~="borderless"]:focus {
    outline: 0;
    border: transparent;

    .hook-form-input-borderless-focus;
}


//  Checkboxes and Radios
// ==========================================================================

// Radio/Checkboxes
//
// Radio/checkbox controllers
//
// Markup:
// <form pam-Form>
//     <label pam-Checkbox>
//         <input type="checkbox" value="">&nbsp; I´m a hipster
//     </label>
//     <label pam-Radio>
//         <input type="radio" id="radio1" name="optionsRadios" value="radios" checked>&nbsp; Programmer
//     </label>
//     <label pam-Radio>
//         <input type="radio" id="radio2" name="optionsRadios" value="radios">&nbsp; Designer
//     </label>
// </form>
//
// Style guide: forms.checkbox

[pam-Form] [pam-Checkbox],
[pam-Form] [pam-Radio] {
    margin: @form-margin 0;
    display: block;
}

[pam-Form] select {
    .hook-form-select;
}

[pam-Form] select[multiple] {
    height: auto;

    .hook-form-select-multiple;
}

[pam-Form] select:focus {
    .hook-form-select-focus;
}

[pam-Form] label {
    margin: @space-8 0;

    .hook-form-label;
}

[pam-Form] fieldset {
    margin: 0;
    padding: @space-8 0 1rem;
    border: 0;

    .hook-form-fieldset;
}

[pam-Form] legend {
    display: block;
    font-size: @font-size-large;
    margin-bottom: @space-8;
    padding: @space-8 0;
    width: 100%;

    .hook-form-legend;
}


// Sub-modifier: Input size
// ========================================================================

// Input size
//
// Input size modifiers
//
// Markup:
// <form pam-Form>
//     <input pam-Input="1-1" type="text" id="password" placeholder="pam-Input 1-1"><br>
//     <input pam-Input="2-3" type="text" id="password" placeholder="pam-Input 2-3"><br>
//     <input pam-Input="1-2" type="text" id="password" placeholder="pam-Input 1-2"><br>
//     <input pam-Input="1-3" type="text" id="password" placeholder="pam-Input 1-3"><br>
//     <input pam-Input="1-4" type="text" id="password" placeholder="pam-Input 1-4">
// </form>
//
// Style guide: forms.size

[pam-Form] [pam-Input~="1-1"] {
    width: 100%;
}

[pam-Form] [pam-Input~="2-3"] {
    width: 66%;
}

[pam-Form] [pam-Input~="1-2"] {
    width: 50%;
}

[pam-Form] [pam-Input~="1-3"] {
    width: 33%;
}

[pam-Form] [pam-Input~="1-4"] {
    width: 25%;
}

//  Sub-modifier: Validation states
// ========================================================================

// Input validation
//
// Input validation states
//
// Markup:
// <form pam-Form>
//      <input type="text" placeholder="Input" pam-Input="{{modifier_class}}">
// </form>
//
// success - attribute marks a success state for the input.
// danger - attribute marks a error state for the input.
//
// Style guide: forms.validation

[pam-Form] input[pam-Input~="success"],
[pam-Form] input[pam-Input~="success"]:focus,
[pam-Form] select[pam-Input~="success"],
[pam-Form] select[pam-Input~="success"]:focus,
[pam-Form] textarea[pam-Input~="success"],
[pam-Form] textarea[pam-Input~="success"]:focus {
    background-color: @form-success-background;
    border: @form-border-width solid @form-success-border;
    color: @form-success-color;
}

[pam-Form] input[pam-Input~="danger"],
[pam-Form] input[pam-Input~="danger"]:focus,
[pam-Form] select[pam-Input~="danger"],
[pam-Form] select[pam-Input~="danger"]:focus,
[pam-Form] textarea[pam-Input~="danger"],
[pam-Form] textarea[pam-Input~="danger"]:focus {
    background-color: @form-danger-background;
    border: @form-border-width solid @form-danger-border;
    color: @form-danger-color;
}


// Sub-object: Select box
// ========================================================================

// Select box
//
// `pam-Select-Box` turns of the platform native styling of select boxes
//  and adds normalized styling for cross browser compatibility.
//
// Markup:
// <form pam-Form>
//     <div pam-Select-Box="{{modifier_class}}">
//         <select>
//             <option value="geek">Geek</option>
//             <option value="nerd">Nerd</option>
//             <option value="dork">Dork</option>
//         </select>
//     </div>
// </form>
//
// multiple - enables the multi select box.
// fluid - enables a select box with fluid width.
// borderless - removes the select box borders.
//
// Style guide: forms.selectbox

[pam-Form] [pam-Select-Box] {
    background: @form-background;
    box-sizing: border-box;
    display: inline-block;
    font-size: @form-font-size;
    line-height: @form-line-height;
    margin: 0 0 @space-8 0;
    position: relative;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

    .hook-select-box;

    select {
        appearance: none;
        background: transparent;
        background-image: none;
        box-shadow: none;
        box-sizing: border-box;
        margin: 0;
        padding: @form-padding-vertical @form-padding-horizontal;
        padding-right: 24px;

        &::-ms-expand {
            display: none;
        }

        &:focus {
            outline: none;
        }
    }

    &::after {
        content: " ▾";
        position: absolute;
        right: @space-base;
        top: @space-8;
    }
}

// Sub-modifier: Select box multiple

[pam-Form] [pam-Select-Box~="multiple"] {
    &::after {
        content: " ";
    }
}

// Sub-modifier: Select box fluid

[pam-Form] [pam-Select-Box~="fluid"] {
    width: 100%;

    select {
        width: 100%;
    }
}

// Sub-modifier: Select box fluid

[pam-Form] [pam-Select-Box~="borderless"] {
    select {
        border: 0;
    }
}


// Sub-object: Form field message
// ========================================================================

// Form message
//
// `pam-Form-Message` is a helper element that shows text
// under or on the side of a form field.
//
//
// Style guide: forms.message

// Form block message
//
// The default message is a block element
//
// Markup:
// <form pam-Form="stacked">
//     <fieldset>
//         <label>Username</label>
//         <input type="text">
//         <aside pam-Form-Message>Block help text</aside>
//     </fieldset>
// </form>
//
// Style guide: forms.message.block

// Form inline message
//
// To display the message inline apply the `inline`
// value to `pam-Form-Message`.
//
// Markup:
// <form pam-Form>
//     <fieldset>
//         <label>Username</label>
//         <input type="text">
//         <aside pam-Form-Message="inline">Block help text</aside>
//     </fieldset>
// </form>
//
// Style guide: forms.message.inline

[pam-Form-Message] {
    color: @skin-text-primary;
    display: block;
    font-size: @font-size-xsmall;

    .hook-form-message;
}

// Sub-modifier: Form input inline message

[pam-Form-Message~="inline"] {
    color: @skin-text-primary;
    display: inline-block;
    font-size: @font-size-xsmall;
    padding-left: @space-8;
    vertical-align: middle;

    .hook-form-message-inline;
}


//  Modifier: Stacked
// ==========================================================================

// Form types
//
// Different form types
//
// Style guide: forms.type

// Default
//
// `pam-Form` creates a default inline form.
//
// Markup:
// <form pam-Form>
//     <input type="email" placeholder="Email">
//     <input type="password" placeholder="Password">
//     <button pam-Button>Log in</button>
// </form>
//
// Style guide: forms.type.inline

// Stacked
//
// `pam-Form="stacked"` Creates a stacked form.
//
// Markup:
// <form pam-Form="stacked">
//     <input type="email" placeholder="Email">
//     <input type="password" placeholder="Password">
//     <button pam-Button>Log in</button>
// </form>
//
// Style guide: forms.type.stacked

[pam-Form~="stacked"] input:not([type="checkbox"]):not([type="radio"]),
[pam-Form~="stacked"] select,
[pam-Form~="stacked"] label,
[pam-Form~="stacked"] textarea {
    display: block;
    margin: @space-8 0;

    .hook-form-stacked;
}


//  Modifier: Aligned
// ==========================================================================

// Aligned
//
// `pam-Form="aligned"` Creates a aligned form with labels to the left of the input fields.
//
// Markup:
// <form pam-Form="aligned">
//     <div pam-Control="group">
//         <label for="email">Email</label>
//         <input type="email" id="password" placeholder="Email">
//     </div>
//     <div pam-Control="group">
//         <label for="password">Password</label>
//         <input type="password" id="password" placeholder="Password">
//     </div>
//     <div pam-Controls>
//         <button pam-Button>Log in</button>
//     </div>
// </form>
//
// Style guide: forms.type.aligned

[pam-Form~="aligned"] input,
[pam-Form~="aligned"] textarea,
[pam-Form~="aligned"] select {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;

    .hook-form-aligned;
}

[pam-Form~="aligned"] textarea {
    vertical-align: top;
}

[pam-Form~="aligned"] [pam-Control~="group"] {
    align-items: center;
    display: flex;
    margin-bottom: @space-8;
}

[pam-Form~="aligned"] [pam-Control~="group"] label {
    display: inline-block;
    margin: 0 1rem 0 0;
    text-align: right;
    vertical-align: middle;
    width: 10rem;
}

[pam-Form~="aligned"] [pam-Controls] {
    margin: @space-8 0 0 11em;
}


//  Sub-object: Grouped inputs
// ==========================================================================

// Grouped fields
//
// `pam-Group` combined with a `<fieldset>` element will group a set of text inputs.
//
// Markup:
// <form pam-Form>
//     <fieldset pam-Group>
//         <input type="text" placeholder="Username" pam-Input="1of3">
//         <input type="email" placeholder="Email" pam-Input="1of3">
//         <input type="password" placeholder="Password" pam-Input="1of3">
//     </fieldset>
//     <fieldset pam-Group>
//         <input type="text" placeholder="Nickname" pam-Input="1of3">
//         <input type="text" placeholder="City" pam-Input="1of3">
//         <input type="text" placeholder="Favorite movie" pam-Input="1of3">
//     </fieldset>
//     <button type="submit" pam-Button pam-Input="1of3">Log in</button>
// </form>
//
// Style guide: forms.group

[pam-Form] fieldset[pam-Group] {
    padding-bottom: 12px;
}

[pam-Form] fieldset[pam-Group]:last-of-type {
    padding-bottom: @space-24;
}

[pam-Form] [pam-Group] input {
    display: block;
    padding: @form-padding;
    position: relative;

    .hook-form-group;
}

[pam-Form] [pam-Group] input:last-child {
    margin-bottom: 0;
}

[pam-Form] [pam-Group] button {
    margin: 0.5rem 0;
}


// Sub-object: Input group
// ========================================================================

// Input icon
//
// `pam-Input-Group` extend form controls by adding icons before
// select or text-based form controls.
//
// Markup:
// <form pam-Form>
//     <div pam-Input-Group>
//         <label for="group-input" pam-Input-Group-Addon>
//             <div sg-mock-icon="padded"></div>
//         </label>
//         <input id="group-input" type="text" placeholder="Input group" pam-Form-Control>
//     </div>
//     <div pam-Input-Group>
//         <label for="group-select" pam-Input-Group-Addon>
//             <div sg-mock-icon="padded"></div>
//         </label>
//         <div pam-Select-Box="fluid">
//             <select id="group-select" pam-Form-Control>
//                 <option value="geek">Geek</option>
//                 <option value="nerd">Nerd</option>
//                 <option value="dork">Dork</option>
//             </select>
//         </div>
//     </div>
// </form>
//
// Style guide: forms.input.group

[pam-Form] [pam-Input-Group] {
    margin-bottom: @form-input-group-margin;
    position: relative;

    > div {
        margin-bottom: 0;
    }

    [pam-Input-Group-Addon] {
        background: transparent;
        box-sizing: border-box;
        left: 0;
        margin: 0;
        position: absolute;
        top: 0;
        width: @form-input-group-addon-space;
    }

    [pam-Form-Control] {
        display: block;
        padding-left: @form-input-group-addon-space;
        width: 100%;
        box-sizing: border-box;
    }

    .hook-form-input-group;
}


// Sub-object: Input group lego
// ========================================================================

// Input group lego
//
// `pam-Input-Group="lego"` extend form controls by adding icons, buttons, selects
//  before or after text-based form controls as lego bricks.
//
// Markup:
// <form pam-Form>
//     <div pam-Input-Group="lego">
//         <div pam-Input-Group-Addon>
//             <div pam-Select-Box>
//             <select>
//                 <option value="honda">+46</option>
//                 <option value="toyota">+211</option>
//                 <option value="nissan">+1-284</option>
//             </select>
//             </div>
//         </div>
//         <input id="addon-lego" type="text" placeholder="One addon" pam-Form-Control>
//     </div>
//     <div pam-Input-Group="lego">
//         <input id="addon-lego" type="text" placeholder="One addon" pam-Form-Control>
//         <div pam-Input-Group-Addon>
//             <div pam-Button>Send</div>
//         </div>
//     </div>
//     <div pam-Input-Group="lego">
//         <div pam-Input-Group-Addon>
//             <div pam-Select-Box>
//                 <select>
//                     <option value="honda">+46</option>
//                     <option value="toyota">+211</option>
//                     <option value="nissan" selected>+1-284</option>
//                 </select>
//             </div>
//         </div>
//             <input id="addon-lego" type="text" placeholder="Two combo addons" pam-Form-Control>
//         <div pam-Input-Group-Addon>
//             <div pam-Button>Send</div>
//         </div>
//     </div>
//     <div pam-Input-Group="lego">
//         <div pam-Input-Group-Addon>
//             <div pam-Button>
//                 <i class="fa fa-plus"></i>
//             </div>
//         </div>
//         <input id="addon-lego" type="text" placeholder="Two button addons" pam-Form-Control>
//         <div pam-Input-Group-Addon>
//             <div pam-Button>
//                 <i class="fa fa-minus"></i>
//             </div>
//         </div>
//     </div>
//     <div pam-Input-Group="lego">
//         <div pam-Input-Group-Addon>
//             <div pam-Button="primary">Foo</div>
//         </div>
//         <input id="addon-lego" type="text" placeholder="Two button addons" pam-Form-Control>
//         <div pam-Input-Group-Addon>
//             <div pam-Button>Bar</div>
//         </div>
//     </div>
// </form>
//
// Style guide: forms.input.group.lego

[pam-Form] [pam-Input-Group~="lego"] {
    border-collapse: separate;
    display: table;

    [pam-Input-Group-Addon] {
        background-color: @form-border;
        border-radius: @form-border-radius;
        color: @form-color;
        font-size: @font-size-base;
        margin: 0;
        min-width: @form-input-group-addon-space;
        position: relative;
        text-align: center;
        vertical-align: middle;
        white-space: nowrap;
        width: 1%;
    }

    [pam-Form-Control] {
        margin-bottom: 0;
        padding: @space-16;
        position: relative;
        z-index: 2;

        &:focus {
            z-index: 3;
        }
    }

    [pam-Input-Group-Addon],
    [pam-Form-Control] {
        display: table-cell;

        > * {
            margin-bottom: 0;
            min-width: @form-input-group-addon-space;
        }

        &:not(:first-child):not(:last-child) {
            border-radius: 0;
        }
    }

    [pam-Form-Control]:first-child,
    [pam-Input-Group-Addon]:first-child {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;

        * {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    [pam-Input-Group-Addon]:first-child {
        border-right: 0;
    }

    [pam-Form-Control]:last-child,
    [pam-Input-Group-Addon]:last-child {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;

        * {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    [pam-Input-Group-Addon]:last-child {
        border-left: 0;
    }
}


// Experimental
// ==================================================================

// Experimental
//
// Following forms rulez are experimental, and has no offical browser support.
//
// Weight: 18
//
// Style guide: forms.experimental


//  Sub-object: Floating label
// ========================================================================

// Floating label
//
// `pam-Field` with `input` and `label` element creates a floating label composite.
//
// <div pam-Alert="callout info">
//    Experimental: CSS only floating label, evaluating to
//    implement for evergreen browsers.
// </div>
//
// Markup:
// <form pam-Form>
//     <div pam-Field>
//         <input type="text" name="fullname" id="fullname" placeholder="Jon Doe">
//         <label for="fullname">Nickname</label>
//     </div>
// </form>
//
// Style guide: forms.experimental.label

[pam-Field] {
    display: inline-flex;
    flex-flow: column-reverse;
    margin-bottom: 1em;
}

[pam-Field] {
    label,
    input {
        transition: all 0.2s;
        touch-action: manipulation;
    }

    input {
        position: relative;
        -webkit-appearance: none;
    }

    input:focus {
        border-bottom: 1px solid #666;
        outline: 0;
    }

    label {
        font-size: 0.875rem;
    }

    input:placeholder-shown + label {
        cursor: text;
        max-width: 66.66%;
        overflow: hidden;
        text-overflow: ellipsis;
        transform-origin: left bottom;
        transform: translate(1rem, 2.6rem) scale(1);
        white-space: nowrap;
    }

    ::-webkit-input-placeholder {
        opacity: 0;
        transition: inherit;
    }

    input:focus::-webkit-input-placeholder {
        opacity: 1;
    }

    input:not(:placeholder-shown) + label,
    input:focus + label {
        cursor: pointer;
        transform: translate(1rem, 1.7rem) scale(1);
    }
}


// Deprecated
// ==================================================================

// Deprecated
//
// Following form rulez will be deprecated in version 1.1.0.
//
// Weight: 19
//
// Style guide: forms.deprecated

// Input icon
// ========================================================================

// Input icon
//
// `pam-Input-Icon` enables icons to be used with a input.
//
//<div pam-Alert="callout warning">
//    Deprecated: Styling for legacy input icons. Support will be dropped
//    after PAM version 1.1.
// </div>
//
// Markup:
// <form pam-Form>
//     <div pam-Input-Icon>
//         <label for="icon">
//         <img src="http://placehold.it/24x24">
//         </label>
//         <input id="icon" type="text" placeholder="Icon">
//     </div>
// </form>
//
// Style guide: forms.deprecated.input-icon

[pam-Form] [pam-Input-Icon],
[pam-Form] [pam-Select-Icon] {
    position: relative;

    label {
        background: transparent;
        position: absolute;
        top: 0;
        left: 0;
        margin: 0;
        width: @space-72;
        box-sizing: border-box;
    }

    input,
    > select {
        display: block;
        padding-left: @space-72;
        width: 100%;
        box-sizing: border-box;
    }

    .hook-form-input-icon;
}

//  Hooks
// ========================================================================

// Hooks
//
// Use hooks to customize form.
//
// `.hook-form`
// `.hook-form-focus`
// `.hook-form-disabled`
// `.hook-form-readonly`
// `.hook-form-readonly-focus`
// `.hook-form-focus-invalid`
// `.hook-form-focus-invalid-focus`
// `.hook-form-input-borderless`
// `.hook-form-input-borderless-focus`
// `.hook-form-select`
// `.hook-form-select-multiple`
// `.hook-form-select-focus`
// `.hook-form-label`
// `.hook-form-fieldset`
// `.hook-form-legend`
// `.hook-form-stacked`
// `.hook-form-aligned`
// `.hook-form-group`
// `.hook-form-input-icon`
// `.hook-form-input-group`
// `.hook-select-box`
// `.hook-form-message`
// `.hook-form-message-inline`
//
// Weight: 20
//
// Style guide: forms.hooks

/* stylelint-disable block-no-empty */
.hook-form() {}
.hook-form-focus() {}
.hook-form-disabled() {}
.hook-form-readonly() {}
.hook-form-readonly-focus() {}
.hook-form-focus-invalid() {}
.hook-form-focus-invalid-focus() {}
.hook-form-input-borderless() {}
.hook-form-input-borderless-focus() {}
.hook-form-select() {}
.hook-form-select-multiple() {}
.hook-form-select-focus() {}
.hook-form-label() {}
.hook-form-fieldset() {}
.hook-form-legend() {}
.hook-form-stacked() {}
.hook-form-aligned() {}
.hook-form-group() {}
.hook-form-input-icon() {}
.hook-form-input-group() {}
.hook-select-box() {}
.hook-form-message() {}
.hook-form-message-inline() {}
/* stylelint-enable */
